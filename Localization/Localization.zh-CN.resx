<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBtn" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="ALC" xml:space="preserve">
    <value>炼金术士</value>
  </data>
  <data name="ARM" xml:space="preserve">
    <value>铸甲匠</value>
  </data>
  <data name="BSM" xml:space="preserve">
    <value>锻铁匠</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>职业</value>
  </data>
  <data name="ClearBtn" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="CRP" xml:space="preserve">
    <value>刻木匠</value>
  </data>
  <data name="CUL" xml:space="preserve">
    <value>烹调师</value>
  </data>
  <data name="ExpReward" xml:space="preserve">
    <value>经验奖励</value>
  </data>
  <data name="GSM" xml:space="preserve">
    <value>雕金匠</value>
  </data>
  <data name="HqOnly" xml:space="preserve">
    <value>只提供高品质的项目</value>
  </data>
  <data name="HqOnlyDesc" xml:space="preserve">
    <value>当启用时，只有高品质的项目将被移交。 残疾时，正常的质量和高品质的物品将被交付。</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>物品</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>等级</value>
  </data>
  <data name="LeveName" xml:space="preserve">
    <value>礼服名称</value>
  </data>
  <data name="LTW" xml:space="preserve">
    <value>制革匠</value>
  </data>
  <data name="MakeLizbeth" xml:space="preserve">
    <value>生成Lisbeth序列模式</value>
  </data>
  <data name="MakeLizbethDesc" xml:space="preserve">
    <value>为选中的礼服创建Lisbeth序列，如果勾选最优经验模式，它会根据到达下一个礼服等级所需要的HQ物品数量创建序列，否则，它默认完成五次礼服任务。</value>
  </data>
  <data name="NumRepeat" xml:space="preserve">
    <value>提交次数</value>
  </data>
  <data name="OptimizeExp" xml:space="preserve">
    <value>最优经验模式</value>
  </data>
  <data name="OptimizeExpDesc" xml:space="preserve">
    <value>只做现在等级范围内的任务，最大化经验</value>
  </data>
  <data name="qtyItem" xml:space="preserve">
    <value>需要物品个数</value>
  </data>
  <data name="RemoveBtn" xml:space="preserve">
    <value>移出</value>
  </data>
  <data name="SaveBtn" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SaveTooltip" xml:space="preserve">
    <value>如果你想以后再次使用这个文件，保存文件。</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索:</value>
  </data>
  <data name="StartBtn" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="WVR" xml:space="preserve">
    <value>裁衣匠</value>
  </data>
  <data name="Tradecraft" xml:space="preserve">
    <value>制作任务</value>
  </data>
</root>